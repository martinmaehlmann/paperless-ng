apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: paperless
  name: paperless
  namespace: paperless-ng
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: paperless
    spec:
      containers:
      - image: jonaswinkler/paperless-ng
        name: paperless-ng
        ports:
          - containerPort: 8000
        envFrom:
          - configMapRef:
              name: paperless-config
          - secretRef:
              name: paperless-secret-key
          - secretRef:
              name: paperless-superuser
        volumeMounts:
          - mountPath: /usr/src/paperless/data
            name: data
          - mountPath: /usr/src/paperless/media
            name: media
          - mountPath: /usr/src/paperless/export
            name: export
          - mountPath: /usr/src/paperless/consume
            name: consume
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: paperless-data-pvc
        - name: media
          persistentVolumeClaim:
            claimName: paperless-media-pvc
        - name: export
          persistentVolumeClaim:
            claimName: paperless-export-pvc
        - name: consume
          persistentVolumeClaim:
            claimName: paperless-consume-pvc
#      initContainers:
#      - name: init-system
#        image: jonaswinkler/paperless-ng
#        command: ['sh', '-c', 'python /usr/src/paperless/src/manage.py migrate && python /usr/src/paperless/src/manage.py createsuperuser --noinput --username "$USERNAME" --email "$EMAIL"', '|| true']
#        envFrom:
#          - configMapRef:
#              name: paperless-config
#          - secretRef:
#              name: paperless-secret-key
#          - secretRef:
#              name: paperless-superuser
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: paperless-config
  labels:
    app: paperless
  namespace: paperless-ng
data:
  PAPERLESS_REDIS: "redis://redis:6379"
  PAPERLESS_DBHOST: "postgres"
  PAPERLESS_TIKA_ENABLED: "1"
  PAPERLESS_TIKA_GOTENBERG_ENDPOINT: "http://gotenberg:3000"
  PAPERLESS_TIKA_ENDPOINT: "http://tika:9998"
  PAPERLESS_OCR_LANGUAGE: "deu"
  PAPERLESS_ALLOWED_HOSTS: "*"
  PAPERLESS_CORS_ALLOWED_HOSTS: "http://localhost:8000"
  PAPERLESS_OCR_MODE: "skip" # skip / skip_noarchive/ redo / force
  PAPERLESS_OCR_CLEAN: "clean-final" # clean / clean-final / none
  PAPERLESS_OCR_DESKEW: "true" # true / false
  PAPERLESS_OCR_ROTATE_PAGES: "true" 
  PAPERLESS_OCR_ROTATE_PAGES_THRESHOLD: "12"
  PAPERLESS_OCR_OUTPUT_TYPE: "pdfa" # pdf / pdfa / pdfa-1 / pdfa-2 / pdfa-3
  PAPERLESS_OCR_PAGES: "0"
  PAPERLESS_OCR_USER_ARGS: ""
  PAPERLESS_TIME_ZONE: "Europe/Berlin"
---
apiVersion: v1
kind: Service
metadata:
  name: paperless
  namespace: paperless-ng
spec:
  selector:
    app: paperless
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: paperless
  namespace: paperless-ng
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/issue-temporary-certificate: "true"
    acme.cert-manager.io/http01-edit-in-place: "true"
spec:
  tls:
  - hosts:
    - paperless-ng.mmaehlmann.de
    secretName: paperless-ng.mmaehlmann-tls
  rules:
  - host: paperless-ng.mmaehlmann.de
    http:
      paths:
        - path: /
          backend:
            serviceName: paperless
            servicePort: 8000
          path: /
---
apiVersion: v1
kind: Secret
metadata:
  name: paperless-secret-key
type: Opaque
data:
  PAPERLESS_SECRET_KEY: foobar==
---
apiVersion: v1
kind: Secret
metadata:
  name: paperless-superuser
type: Opaque
data:
  DJANGO_SUPERUSER_PASSWORD: foobar==
  EMAIL: foobar==
  USERNAME: YWRtaW4=
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-media-pvc
  labels:
    app: paperless
  namespace: paperless-ng
spec:
  storageClassName: local-path-retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-data-pvc
  labels:
    app: paperless
  namespace: paperless-ng
spec:
  storageClassName: local-path-retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-consume-pvc
  labels:
    app: paperless
  namespace: paperless-ng
spec:
  storageClassName: local-path-retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-export-pvc
  labels:
    app: paperless
  namespace: paperless-ng
spec:
  storageClassName: local-path-retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
